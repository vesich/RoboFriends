{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","each","Scroll","props","style","overflowY","border","height","children","SearchBox","searchField","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","target","value","state","a","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCOLK,EAZE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BACKA,EAAOC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAEhBT,KAAMS,EAAKT,KACXC,MAAOQ,EAAKR,MACZC,GAAIO,EAAKP,IAHJO,EAAKP,UCGXQ,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAO,SAAnE,SACKJ,EAAMK,YCSJC,EAZG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKhB,UAAU,MAAf,SACI,uBACIA,UAAU,mCACViB,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCoCXI,G,wDApCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAER,YAAaO,EAAME,OAAOC,SAb1C,EAAKC,MAAQ,CACTtB,OAAQ,GACRW,YAAa,IAJP,E,4FAQd,8BAAAY,EAAA,sEAC2BC,MAAM,8CADjC,cACUC,EADV,gBAEwBA,EAASC,OAFjC,cAEUC,EAFV,yBAGWC,KAAKT,SAAS,CAAEnB,OAAQ2B,KAHnC,gD,0EASA,WAAU,IAAD,EAC2BC,KAAKN,MAA7BtB,EADH,EACGA,OAAQW,EADX,EACWA,YACVkB,EAAiB7B,EAAO8B,QAAO,SAAAC,GACjC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAStB,EAAYqB,kBAGzD,OAAQhC,EAAOkC,OAEP,sBAAKtC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWgB,aAAcgB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,OAAQ6B,SANV,6C,GAxBdM,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.62679b60.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {robots.map(each => <Card\r\n                key={each.id}\r\n                name={each.name}\r\n                email={each.email}\r\n                id={each.id} />)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border:'5px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='Search robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll'\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css'\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\r\n        const users = await response.json();\r\n        return this.setState({ robots: users });\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchField: event.target.value })\r\n    }\r\n    render() {\r\n        const { robots, searchField } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n        })\r\n\r\n        return !robots.length ? <h1>Loading</h1> :\r\n            (\r\n                <div className='tc' >\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}